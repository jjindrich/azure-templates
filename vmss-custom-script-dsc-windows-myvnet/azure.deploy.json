{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vmSku": {
        "type": "string",
        "defaultValue": "Standard_A2_v2",
        "metadata": {
          "description": "Size of VMs in the VM Scale Set."
        }
      },
      "vmssName": {
        "type": "string",
        "metadata": {
          "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
        },
        "maxLength": 61
      },
      "instanceCount": {
        "type": "int",
        "metadata": {
          "description": "Number of VM instances (100 or less)."
        },
        "defaultValue": 2,
        "maxValue": 100
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username on all VMs."
        }
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Admin password on all VMs."
        }
      },
      "_artifactsLocation": {
        "defaultValue": "https://jjdscscripts.blob.core.windows.net/scripts",
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        }
      },
      "_artifactsLocationSasToken": {
        "defaultValue": "",
        "type": "string",
        "metadata": {
          "description": "SAS token to access storage account."
        }          
      },
      "DscExtensionUpdateTagVersion" : {
          "type": "string"
      },
      "virtualNetworkResourceGroup": {
        "type": "string"
      },
      "virtualNetworkName": {
        "type": "string"
      },
      "virtualNetworkSubnetName": {
        "type": "string"
      }
    },
    "variables": {
      "DscExtensionArchiveFileName" : "config.zip",
      "DscExtensionFileName" : "JJWebAppConfig.ps1",
      "DscExtensionFunction" : "JJWebAppConfig",
      "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
      "vnetID": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
      "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('virtualNetworkSubnetName'))]",
      "publicIPAddressName": "[concat(variables('namingInfix'), 'pip')]",
      "loadBalancerName": "[concat(variables('namingInfix'), 'lb')]",
      "loadBalancerFrontEndName": "loadBalancerFrontEnd",
      "loadBalancerBackEndName": "loadBalancerBackEnd",
      "loadBalancerProbeName": "loadBalancerHttpProbe",
      "loadBalancerNatPoolName": "loadBalancerNatPool"
    },
    "resources": [
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "name": "[parameters('vmssName')]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-04-30-preview",
        "dependsOn": [
          "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]"
        ],
        "sku": {
          "name": "[parameters('vmSku')]",
          "capacity": "[parameters('instanceCount')]"
        },
        "properties": {
          "overprovision": true,
          "upgradePolicy": {
            "mode": "Manual"
          },
          "virtualMachineProfile": {
            "storageProfile": {
              "osDisk": {
                "createOption": "FromImage",
                "caching": "ReadWrite"
              },
              "imageReference": {
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "2016-Datacenter",
                "version": "latest"
              }
            },
            "osProfile": {
              "computerNamePrefix": "[parameters('vmssName')]",
              "adminUsername": "[parameters('adminUsername')]",
              "adminPassword": "[parameters('adminPassword')]"
            },
            "networkProfile": {
              "networkInterfaceConfigurations": [
                {
                  "name": "nic",
                  "properties": {
                    "primary": true,
                    "ipConfigurations": [
                      {
                        "name": "ipconfig",
                        "properties": {
                          "subnet": {
                            "id": "[variables('subnetRef')]"
                          },
                          "loadBalancerBackendAddressPools": [
                            {
                              "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('loadBalancerBackEndName'))]"
                            }
                          ],
                          "loadBalancerInboundNatPools": [
                            {
                              "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('loadBalancerNatPoolName'))]"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "extensionProfile": {
              "extensions": [
                {
                    "name": "Microsoft.Powershell.DSC",
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.20",
                        "forceUpdateTag": "[parameters('DscExtensionUpdateTagVersion')]",
                        "autoUpgradeMinorVersion": false,                        
                        "settings": {
                            "configuration": {
                                "url": "[concat(parameters('_artifactsLocation'), '/', variables('DscExtensionArchiveFileName'))]",
                                "script": "[variables('DscExtensionFileName')]",
                                "function": "[variables('DscExtensionFunction')]"
                            },
                            "configurationArguments": {                                
                            }
                        },
                        "protectedSettings": {
                            "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]"
                        }
                    }

                }
              ]
            }
          }
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-06-01",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[toLower(parameters('vmssName'))]"
          }
        }
      },
      {
        "type": "Microsoft.Network/loadBalancers",
        "name": "[variables('loadBalancerName')]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-06-01",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "[variables('loadBalancerFrontEndName')]",
              "properties": {
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "[variables('loadBalancerBackendName')]"
            }
          ],
          "loadBalancingRules": [
            {
              "name": "roundRobinLBRule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/', variables('loadBalancerFrontEndName'))]"
                },
                "backendAddressPool": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/', variables('loadBalancerBackendName'))]"
                },
                "protocol": "Tcp",
                "frontendPort": 80,
                "backendPort": 80,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/', variables('loadBalancerProbeName'))]"
                }
              }
            }
          ],
          "probes": [
            {
              "name": "[variables('loadBalancerProbeName')]",
              "properties": {
                "protocol": "Tcp",
                "port": 80,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            }
          ],
          "inboundNatPools": [
            {
              "name": "[variables('loadBalancerNatPoolName')]",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/', variables('loadBalancerFrontEndName'))]"
                },
                "protocol": "tcp",
                "frontendPortRangeStart": 50000,
                "frontendPortRangeEnd": 50019,
                "backendPort": 3389
              }
            }
          ]
        }
      }
    ]
  }