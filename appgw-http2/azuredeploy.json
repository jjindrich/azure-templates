{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appGatewayName": {
      "type": "string",
      "metadata": {
        "description": "Name of Application Gateway"
      }
    },
    "appGatewaySkuName": {
      "type": "string",
      "allowedValues": [
        "Standard_Small",
        "Standard_Medium",
        "Standard_Large"
      ],
      "defaultValue": "Standard_Small",
      "metadata": {
        "description": "Sku Name of Application Gateway"
      }
    },
    "appGatewayCapacity": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of instances Application Gateway"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "Name of IP Address resource for Application Gateway"
      }
    },
    "backendIpAddress1": {
      "type": "string",
      "defaultValue": "www.bing.com",
      "metadata": {
        "description": "IP Address for Backend Server 1"
      }
    },
    "certData": {
      "type": "securestring",
      "metadata": {
        "description": "Base-64 encoded form of the .pfx file"
      }
    },
    "certPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for .pfx certificate"
      }
    },
    "certPublicKeyData": {
      "type": "securestring",
      "metadata": {
        "description": "Base-64 encoded form of the .cer file. This is the public key for the cert on the web servers."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Virtual Network"
      }
    },
    "virtualNetworkSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of subnet in the Virtual Network"
      }
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "metadata": {
        "description": "Address prefix for the Virtual Network"
      }
    },
    "virtualNetworkSubnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "Subnet prefix in the Virtal Network"
      }
    }
  },
  "variables": {
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('virtualNetworkSubnetName'))]",
    "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]",
    "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways',parameters('appGatewayName'))]",
    "apiVersion": "2015-05-01-preview"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetworkAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('virtualNetworkSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('virtualNetworkSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-10-01",
      "name": "[parameters('appGatewayName')]",
      "type": "Microsoft.Network/applicationGateways",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]"
      ],
      "properties": {
        "sku": {
          "name": "[parameters('appGatewaySkuName')]",
          "tier": "Standard",
          "capacity": "[parameters('appGatewayCapacity')]"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "sslCertificates": [
          {
            "name": "cert",
            "properties": {
              "data": "[parameters('certData')]",
              "password": "[parameters('certPassword')]"
            }
          }
        ],
        "authenticationCertificates": [
          {
            "properties": {
              "data": "[parameters('certPublicKeyData')]"
            },
            "name": "cert"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendIP",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('publicIPRef')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "http",
            "properties": {
              "Port": 80
            }
          },
          {
            "name": "https",
            "properties": {
              "port": 443
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "appGatewayBackendPool",
            "properties": {
              "BackendAddresses": [
                {
                  "IpAddress": "[parameters('backendIpAddress1')]"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "http",
            "properties": {
              "Port": 80,
              "Protocol": "Http",
              "CookieBasedAffinity": "Disabled"
            }
          },
          {
            "name": "https",
            "properties": {
              "Port": 443,
              "Protocol": "Https",
              "CookieBasedAffinity": "Disabled",
              "AuthenticationCertificates": [
                {
                  "Id": "[concat(variables('applicationGatewayID'), '/authenticationCertificates/cert')]"
                }
              ]
            }
          }
        ],
        "httpListeners": [
          {
            "name": "http",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/http')]"
              },
              "Protocol": "Http",
              "SslCertificate": null
            }
          },
          {
            "name": "https",
            "properties": {
              "frontendIPConfiguration": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
              },
              "frontendPort": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/https')]"
              },
              "protocol": "Https",
              "sslCertificate": {
                "Id": "[concat(variables('applicationGatewayID'), '/sslCertificates/cert')]"
              },
              "requireServerNameIndication": false
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "httpRule",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/http')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/http')]"
              }
            }
          },
          {
            "name": "httpsRule",
            "properties": {
              "ruleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/https')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/https')]"
              }
            }
          }
        ],
        "enableHttp2": true
      }
    }
  ]
}